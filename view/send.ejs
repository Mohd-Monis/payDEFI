<%-include("includes/head")%>
    <link rel="stylesheet" href="styles/dashboard.css">
    </head>

    <%- include("includes/header") %>

        <body>
            <div class="Container">
                <div class="leftContainer">
                    <div class="buttons">
                        <div class="button">
                            <button >
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none">
                                    <path
                                        d="M2 6C2 4.11438 2 3.17157 2.58579 2.58579C3.17157 2 4.11438 2 6 2C7.88562 2 8.82843 2 9.41421 2.58579C10 3.17157 10 4.11438 10 6V8C10 9.88562 10 10.8284 9.41421 11.4142C8.82843 12 7.88562 12 6 12C4.11438 12 3.17157 12 2.58579 11.4142C2 10.8284 2 9.88562 2 8V6Z"
                                        stroke="#000000" stroke-width="1.5" />
                                    <path
                                        d="M2 19C2 18.0681 2 17.6022 2.15224 17.2346C2.35523 16.7446 2.74458 16.3552 3.23463 16.1522C3.60218 16 4.06812 16 5 16H7C7.93188 16 8.39782 16 8.76537 16.1522C9.25542 16.3552 9.64477 16.7446 9.84776 17.2346C10 17.6022 10 18.0681 10 19C10 19.9319 10 20.3978 9.84776 20.7654C9.64477 21.2554 9.25542 21.6448 8.76537 21.8478C8.39782 22 7.93188 22 7 22H5C4.06812 22 3.60218 22 3.23463 21.8478C2.74458 21.6448 2.35523 21.2554 2.15224 20.7654C2 20.3978 2 19.9319 2 19Z"
                                        stroke="#000000" stroke-width="1.5" />
                                    <path
                                        d="M14 16C14 14.1144 14 13.1716 14.5858 12.5858C15.1716 12 16.1144 12 18 12C19.8856 12 20.8284 12 21.4142 12.5858C22 13.1716 22 14.1144 22 16V18C22 19.8856 22 20.8284 21.4142 21.4142C20.8284 22 19.8856 22 18 22C16.1144 22 15.1716 22 14.5858 21.4142C14 20.8284 14 19.8856 14 18V16Z"
                                        stroke="#000000" stroke-width="1.5" />
                                    <path
                                        d="M14 5C14 4.06812 14 3.60218 14.1522 3.23463C14.3552 2.74458 14.7446 2.35523 15.2346 2.15224C15.6022 2 16.0681 2 17 2H19C19.9319 2 20.3978 2 20.7654 2.15224C21.2554 2.35523 21.6448 2.74458 21.8478 3.23463C22 3.60218 22 4.06812 22 5C22 5.93188 22 6.39782 21.8478 6.76537C21.6448 7.25542 21.2554 7.64477 20.7654 7.84776C20.3978 8 19.9319 8 19 8H17C16.0681 8 15.6022 8 15.2346 7.84776C14.7446 7.64477 14.3552 7.25542 14.1522 6.76537C14 6.39782 14 5.93188 14 5Z"
                                        stroke="#000000" stroke-width="1.5" />
                                </svg>Dashboard
                            </button>
                        </div>
                        <form action="/send" method="get">
                            <div class="button">
                                <button class="active">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                        fill="none">
                                        <path
                                            d="M12 5L12 15M12 5C11.2998 5 9.99153 6.9943 9.5 7.5M12 5C12.7002 5 14.0085 6.9943 14.5 7.5"
                                            stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round" />
                                        <path d="M5 19H19.0001" stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round" />
                                    </svg>Send
                                </button>
                            </div>
                        </form>
                        <form action="/receive" method="get">
                            <div class="button">
                                <button>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                        fill="none">
                                        <path
                                            d="M12 15L12 5M12 15C11.2998 15 9.99153 13.0057 9.5 12.5M12 15C12.7002 15 14.0085 13.0057 14.5 12.5"
                                            stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round" />
                                        <path d="M5 19H19.0001" stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                            stroke-linejoin="round" />
                                    </svg>Receive
                                </button>
                            </div>
                        </form>
                        
                        <div class="button">
                            <button>
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none">
                                    <path
                                        d="M4.5795 8.60699L2 8.45417C3.849 3.70488 9.15764 0.999849 14.3334 2.34477C19.8461 3.77722 23.1205 9.26153 21.647 14.5943C20.4283 19.0051 16.3433 21.9307 11.8479 22"
                                        stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                        stroke-linejoin="round" />
                                    <path d="M12 22C6.5 22 2 17 2 11" stroke="#000000" stroke-width="1.5"
                                        stroke-linecap="round" stroke-linejoin="round" stroke-dasharray="0.5 3" />
                                    <path
                                        d="M13.6039 9.72177C13.2524 9.35267 12.3906 8.48536 11.0292 9.10111C9.66784 9.71686 9.45159 11.698 11.5108 11.9085C12.4416 12.0036 13.0484 11.7981 13.6039 12.3794C14.1595 12.9607 14.2627 14.5774 12.8425 15.013C11.4222 15.4487 10.502 14.7292 10.2545 14.5041M11.9078 8.01953V8.81056M11.9078 15.1471V16.0195"
                                        stroke="#000000" stroke-width="1.5" stroke-linecap="round"
                                        stroke-linejoin="round" />
                                </svg>Transaction History
                            </button>
                        </div>
                        <div class="button">
                            <button>
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none">
                                    <path
                                        d="M16.3083 4.38394C15.7173 4.38394 15.4217 4.38394 15.1525 4.28405C15.1151 4.27017 15.0783 4.25491 15.042 4.23828C14.781 4.11855 14.5721 3.90959 14.1541 3.49167C13.1922 2.52977 12.7113 2.04882 12.1195 2.00447C12.04 1.99851 11.96 1.99851 11.8805 2.00447C11.2887 2.04882 10.8077 2.52977 9.84585 3.49166C9.42793 3.90959 9.21897 4.11855 8.95797 4.23828C8.92172 4.25491 8.88486 4.27017 8.84747 4.28405C8.57825 4.38394 8.28273 4.38394 7.69171 4.38394H7.58269C6.07478 4.38394 5.32083 4.38394 4.85239 4.85239C4.38394 5.32083 4.38394 6.07478 4.38394 7.58269V7.69171C4.38394 8.28273 4.38394 8.57825 4.28405 8.84747C4.27017 8.88486 4.25491 8.92172 4.23828 8.95797C4.11855 9.21897 3.90959 9.42793 3.49166 9.84585C2.52977 10.8077 2.04882 11.2887 2.00447 11.8805C1.99851 11.96 1.99851 12.04 2.00447 12.1195C2.04882 12.7113 2.52977 13.1922 3.49166 14.1541C3.90959 14.5721 4.11855 14.781 4.23828 15.042C4.25491 15.0783 4.27017 15.1151 4.28405 15.1525C4.38394 15.4217 4.38394 15.7173 4.38394 16.3083V16.4173C4.38394 17.9252 4.38394 18.6792 4.85239 19.1476C5.32083 19.6161 6.07478 19.6161 7.58269 19.6161H7.69171C8.28273 19.6161 8.57825 19.6161 8.84747 19.7159C8.88486 19.7298 8.92172 19.7451 8.95797 19.7617C9.21897 19.8815 9.42793 20.0904 9.84585 20.5083C10.8077 21.4702 11.2887 21.9512 11.8805 21.9955C11.96 22.0015 12.04 22.0015 12.1195 21.9955C12.7113 21.9512 13.1922 21.4702 14.1541 20.5083C14.5721 20.0904 14.781 19.8815 15.042 19.7617C15.0783 19.7451 15.1151 19.7298 15.1525 19.7159C15.4217 19.6161 15.7173 19.6161 16.3083 19.6161H16.4173C17.9252 19.6161 18.6792 19.6161 19.1476 19.1476C19.6161 18.6792 19.6161 17.9252 19.6161 16.4173V16.3083C19.6161 15.7173 19.6161 15.4217 19.7159 15.1525C19.7298 15.1151 19.7451 15.0783 19.7617 15.042C19.8815 14.781 20.0904 14.5721 20.5083 14.1541C21.4702 13.1922 21.9512 12.7113 21.9955 12.1195C22.0015 12.04 22.0015 11.96 21.9955 11.8805C21.9512 11.2887 21.4702 10.8077 20.5083 9.84585C20.0904 9.42793 19.8815 9.21897 19.7617 8.95797C19.7451 8.92172 19.7298 8.88486 19.7159 8.84747C19.6161 8.57825 19.6161 8.28273 19.6161 7.69171V7.58269C19.6161 6.07478 19.6161 5.32083 19.1476 4.85239C18.6792 4.38394 17.9252 4.38394 16.4173 4.38394H16.3083Z"
                                        stroke="#000000" stroke-width="1.5" />
                                    <path
                                        d="M15.5 12C15.5 13.933 13.933 15.5 12 15.5C10.067 15.5 8.5 13.933 8.5 12C8.5 10.067 10.067 8.5 12 8.5C13.933 8.5 15.5 10.067 15.5 12Z"
                                        stroke="#000000" stroke-width="1.5" />
                                </svg>Settings
                            </button>
                        </div>
                    </div>
                    <div class="page"></div>
                </div>
                <div class="rightContainer ">
                    <div class="small">

                        <h4>Balance</h4>
                        <span>
                            <%= balance %>
                        </span>
                    </div>
                    <div class="small">
                        <h4>To</h4>
                        <span>
                            <input type="text" name="recepientAddress" id="rrr">
                        </span>
                    </div>
                    <!-- <div class="transaction">
                        <p>Recived Amount <span>
                                <%=recievedAmount%>
                            </span>
                        </p>
                        <br>
                        <p>Transaction Cost <span>
                                <%=transactionCost%>
                            </span>
                        </p>
                        <br>
                        <p>Total Amount <span>
                                <%=recievedAmount + transactionCost%>
                            </span>
                        </p>
                        <br>
                    </div> -->
                    <div class="transactbutton">
                    <button class="send" onclick="sendButtonClick()">Send</button>
                    <button class="send" onclick="connectWallet()" id="connect_button">Connect</button>
                    <p id="status_p"><span id="status"></span></p>
                    </div>

                </div>
            </div>
            <script>
                var wallet;
                var receiver_address = document.getElementById("rrr").value;
                const lamports_per_sol = solanaWeb3.LAMPORTS_PER_SOL;
                function connectWallet() {
                    (async () => {
                        try {
                            wallet = await window.solana.connect();
                        } catch (err) {
                            console.log(err);
                        }
                    })();
                    window.solana.on(
                        "connect",
                        () => (

                            document.getElementById("connect_button").innerText = "Connected"
                            // console.log(wallet.publicKey["Symbol(Symbol.toStringTag)"])
                        )
                    );
                }

                async function sendButtonClick() {

                    const receiverAddress = document.getElementById("rrr").value;

                    const quantity = document.getElementById("quantity").value
                    if (quantity != null && quantity != 0) {
                        document.getElementById("status_p").text = "Status";
                        document.getElementById("status_p").innerText = "Sending " + quantity + " SOL to " + ellipsizeAddress(receiverAddress) + " account address";
                        await signInTransactionAndSendMoney(receiverAddress, quantity)
                    } else {
                        document.getElementById("status_p").text = "Status";
                        document.getElementById("status_p").innerText = "Amount must be more than 0!"
                    }

                }

                function ellipsizeAddress(str) {
                    if (str.length > 35) {
                        return str.substr(0, 8) + '...' + str.substr(str.length - 8, str.length);
                    }
                    return str;
                }

                function signInTransactionAndSendMoney(destPubkeyStr, quantity) {
                    (async () => {
                        const network = "https://api.devnet.solana.com";
                        const connection = new solanaWeb3.Connection(network);
                        const transaction = new solanaWeb3.Transaction();

                        try {
                            const lamports = quantity * lamports_per_sol;

                            console.log("starting sendMoney");
                            const destPubkey = new solanaWeb3.PublicKey(destPubkeyStr);
                            const walletAccountInfo = await connection.getAccountInfo(
                                wallet.publicKey
                            );
                            console.log("wallet data size", walletAccountInfo?.data.length);

                            const receiverAccountInfo = await connection.getAccountInfo(
                                destPubkey
                            );
                            console.log("receiver data size", receiverAccountInfo?.data.length);

                            const instruction = solanaWeb3.SystemProgram.transfer({
                                fromPubkey: wallet.publicKey,
                                toPubkey: destPubkey,
                                lamports,
                            });
                            let trans = await setWalletTransaction(instruction, connection);

                            let signature = await signAndSendTransaction(
                                wallet,
                                trans,
                                connection
                            );

                        } catch (e) {
                            console.warn("Failed", e);
                        }

                    })();

                    async function setWalletTransaction(instruction, connection) {
                        const transaction = new solanaWeb3.Transaction();
                        transaction.add(instruction);
                        transaction.feePayer = wallet.publicKey;
                        let hash = await connection.getRecentBlockhash();
                        console.log("blockhash", hash);
                        transaction.recentBlockhash = hash.blockhash;
                        return transaction;
                    }

                    async function signAndSendTransaction(wallet, transaction, connection) {
                        // Sign transaction, broadcast, and confirm
                        const { signature } = await window.solana.signAndSendTransaction(
                            transaction
                        );
                        await connection.confirmTransaction(signature);
                        return signature;
                    }
                }
            </script>
        </body>